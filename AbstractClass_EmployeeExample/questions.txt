Why and when should we use an abstract class?
So we would create an abstract class when want to move the common functionality of 2 or more classes 
into a base class and when we don't want that base class to be instantiated.
Example in github: https://github.com/m-elmohgazi/AbstractClass_EmployeeExample
—-------------------------------------------
Can an abstract class have a constructor? If so, what is the use?
Yes, a class constructor used to initialize the class fields in the same line.
1-If you want to initialize certain fields of the abstract class before the instantiation of the child-class takes place.
2-Execute code that is relevant for every child class. This prevents the duplicate code.
https://github.com/m-elmohgazi/AbstractClass_EmployeeExample
—-------------------------------------------
You cannot create an instance of an abstract class,so what is the use of a constructor in an abstract class?
Because we can create an instance of a class that is derived from the abstract class. So when an instance of derived class is created the parent abstract class constructor is automatically called.
So it is a good practice to use the protected access modifier with the abstract class constructor. Public doesn’t make sense.
https://github.com/m-elmohgazi/AbstractClass_EmployeeExample
—-------------------------------------------
Can you call an abstract method from an abstract class constructor?
Yes,if you want the abstract method to be invoked automatically whenever an instance of the class that is derived from the abstract class is created, then we would call it in the constructor of the base class.
https://github.com/m-elmohgazi/AbstractClass_EmployeeExample
—-------------------------------------------
Override vs new when implementing a virtual method?
1-override will override the implementation 
2-new will hide the virtual method in the base class.
Example when use new:
Base b = new Derived();
Derived d = new Derived();
b.Print(); // Calls Base.Print 
d.Print(); // Calls Derived.Print
—-------------------------------------------
